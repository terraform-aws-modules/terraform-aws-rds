name: pre-Commit

on:
  pull_request:
    branches:
      - main
      - master

jobs:
  getBaseVersion:
    name: Get module max TF version
    runs-on: ubuntu-latest
    outputs:
      minVersion: ${{ steps.minMax.outputs.minVersion }}
      maxVersion: ${{ steps.minMax.outputs.maxVersion }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform min/max versions
        id: minMax
        uses: clowdhaus/terraform-min-max@v1.0.3

  formatUpdateDocs:
    name: Format and update docs
    runs-on: ubuntu-latest
    needs: getBaseVersion
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          persist-credentials: false
          fetch-depth: 0

      - name: Pre-commit Terraform ${{ needs.getBaseVersion.outputs.maxVersion }}
        continue-on-error: true # because we want to format and not fail CI
        uses: clowdhaus/terraform-composite-actions/pre-commit@v1.1.0
        with:
          terraform-version: ${{ needs.getBaseVersion.outputs.maxVersion }}

      - name: Commit changes
        uses: clowdhaus/terraform-composite-actions/commit@v1.1.0
        with:
          git-branch: ${{ github.event.pull_request.head.ref }}
          github-token: ${{ secrets.PAT_GITHUB }}

  getDirectories:
    name: Get root directories
    runs-on: ubuntu-latest
    needs: formatUpdateDocs
    outputs:
      directories: ${{ steps.search.outputs.directories }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get root directories
        id: search
        uses: clowdhaus/terraform-composite-actions/directories@v1.1.0

  preCommitMinVersions:
    name: Min TF pre-commit
    needs: getDirectories
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJson(needs.getDirectories.outputs.directories) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform min/max versions
        id: minMax
        uses: clowdhaus/terraform-min-max@v1.0.3
        with:
          directory: ${{ matrix.directory }}

      - name: Pre-commit Terraform ${{ steps.minMax.outputs.minVersion }}
        # Run only validate pre-commit check on min version supported
        if: ${{ matrix.directory !=  '.' }}
        uses: clowdhaus/terraform-composite-actions/pre-commit@v1.1.0
        with:
          terraform-version: ${{ steps.minMax.outputs.minVersion }}
          args: 'terraform_validate --color=always --show-diff-on-failure --files ${{ matrix.directory }}/*'

      - name: Pre-commit Terraform ${{ steps.minMax.outputs.minVersion }}
        # Run only validate pre-commit check on min version supported
        if: ${{ matrix.directory ==  '.' }}
        uses: clowdhaus/terraform-composite-actions/pre-commit@v1.1.0
        with:
          terraform-version: ${{ steps.minMax.outputs.minVersion }}
          args: 'terraform_validate --color=always --show-diff-on-failure --files $(ls *.tf)'

  preCommitMaxVersion:
    name: Max TF pre-commit
    runs-on: ubuntu-latest
    needs: [getBaseVersion, formatUpdateDocs]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Terraform min/max versions
        id: minMax
        uses: clowdhaus/terraform-min-max@v1.0.3

      - name: Pre-commit Terraform ${{ steps.minMax.outputs.maxVersion }}
        uses: clowdhaus/terraform-composite-actions/pre-commit@v1.1.0
        with:
          terraform-version: ${{ steps.minMax.outputs.maxVersion }}
